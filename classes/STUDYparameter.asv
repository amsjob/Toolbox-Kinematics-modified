classdef STUDYparameter
    %STUDYparameter Summary of this class goes here
    %   Detailed explanation goes here
    
    properties
        parameters
        dualQuaternion
    end
    
    methods
        function obj = STUDYparameter(varargin)
            if nargin < 1
                % identity
                obj.parameters    = zeros(8,1);
                obj.parameters(1) = 1;
                obj.dualQuaternion = Dualquaternion(Quaternion(1,[0 0 0]));
            else
                %
                obj.parameters    = zeros(8,1);
                obj.parameters    = varargin{1}';
                a = obj.parameters(1:4);
                b = obj.parameters(5:8);
                obj.dualQuaternion = Dualquaternion(Quaternion(a(1),[a(2) a(3) a(4)]),...
                    Quaternion(b(1),[b(2) b(3) b(4)]));
            end
        end
        
        function obj = getHomogeneousMatrix(study)
            a = study.parameters;
           
            
%             A = zeros(4,4);
%             A(1,1) = a(1)^2 + a(2)^2 +a(3)^2 +a(4)^2;%
%             A(2,1) = 2*(a(1)*a(5)-a(2)*a(5)-a(8)*a(3)+a(7)*a(4));
%             A(2,2) = a(1)^2 +a(2)^2 - a(3)^2 - a(4)^2;%
%             A(2,3) = 2*(a(2)*a(3) + a(1)*a(4));
%             A(2,4) = 2*(a(4)*a(2)-a(1)*a(3));
%             A(3,1) = 2*(a(4)*a(6)-a(2)*a(8)-a(1)*a(7)+a(3)*a(5));
%             A(3,2) = 2*(a(2)*a(3) - a(1)*a(4));
%             A(3,3) = a(1)^2 - a(2)^2 +a(3)^2 -a(4)^2;
%             A(3,4) = 2*(a(3)*a(4) + a(1)*a(2));
%             A(4,1) = 2*(a(2)*a(7)-a(3)*a(6)-a(1)*a(8)+a(4)*a(5));
%             A(4,2) = 2*(a(4)*a(2) + a(1)*a(3));
%             A(4,3) = 2*(a(3)*a(4)-a(1)*a(2)); 
%             A(4,4) = a(1)^2 - a(2)^2 - a(3)^2 +a(4)^2;
            
            rotation = study.dualQuaternion.getRotation;
            rotation = HomogeneousVector([rotation.realpart.scal, rotation.realpart.vect]);
            translation = study.dualQuaternion.getTranslation;
            translation = HomogeneousVector([ 1 , translation.dualpart.vect]);
            
            obj = HomogeneousTransformationMatrix(translation,rotation);
            
        end
        
        % convert from objext to a double vector containing study
        % parameters
        function res = double(obj)
            
        end
        
        function disp(obj)
            disp('class STUDYparameter') ;
            disp(obj.parameters);
        end
    end
    
end

