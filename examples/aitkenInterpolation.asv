% a = {};
% controlPoints.coords = getSphereCoords(0,0);
% controlPoints.value = 0;
% a{1} = controlPoints;
% controlPoints.coords = getSphereCoords(pi/10,-pi/12);
% controlPoints.value = .25;
% a{2} = controlPoints;
% controlPoints.coords = getSphereCoords(pi/6,pi/8);
% controlPoints.value = .5;
% a{3} = controlPoints;
% controlPoints.coords = getSphereCoords(pi/4,pi/4);
% controlPoints.value = .75;
% a{4} = controlPoints;
% controlPoints.coords = getSphereCoords(pi/2,pi/2);
% controlPoints.value = 1;
% a{5} = controlPoints;

%% aitken points
% a = {};
% controlPoints.coords = getSphereCoords(-pi/12,0);
% controlPoints.value = 0;
% a{1} = controlPoints;
% controlPoints.coords = getSphereCoords(pi/10,-pi/12);
% controlPoints.value = .25;
% a{2} = controlPoints;
% controlPoints.coords = getSphereCoords(pi/6,pi/8);
% controlPoints.value = .5;
% a{3} = controlPoints;
% controlPoints.coords = getSphereCoords(pi/4,pi/4);
% controlPoints.value = .75;
% a{4} = controlPoints;
% controlPoints.coords = getSphereCoords(pi/2,pi/2);
% controlPoints.value = 1;
% a{5} = controlPoints;
% controlPoints.coords = getSphereCoords(-pi/3,pi/4);
% controlPoints.value = 1.25;
% a{6} = controlPoints;
% controlPoints.coords = getSphereCoords(pi/3,pi/7);
% controlPoints.value = 1.5;
% a{7} = controlPoints;

%% C1-QB - splines

a = {};
controlPoints.coords = getSphereCoords(-pi/12,0);
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(pi/10,-pi/12);
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(pi/6,pi/8);
a{3} = controlPoints;
controlPoints.coords = getSphereCoords(pi/3,pi/4);
a{4} = controlPoints;
controlPoints.coords = getSphereCoords(pi/2,pi/2);
a{5} = controlPoints;



controlPoints.coords = getSphereCoords(pi/2,pi/2);
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(pi/3+pi,pi/3);
% controlPoints.coords = [1;0.1436;-0.5904;0.7943];
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(pi/6+pi,pi/8);
a{3} = controlPoints;
controlPoints.coords = getSphereCoords(pi/12+pi,pi/12);
a{4} = controlPoints;
controlPoints.coords = getSphereCoords(pi,0);
a{5} = controlPoints;

%% QB-splines C1 Übergang mit tangentialkreisen

a = {};
controlPoints.coords = getSphereCoords(-pi/12,0);
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(pi/10,-pi/12);
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(pi/6,pi/8);
a{3} = controlPoints;
controlPoints.coords = getSphereCoords(pi/3,pi/4);
a{4} = controlPoints;
controlPoints.coords = getSphereCoords(pi/2,pi/2);
a{5} = controlPoints;

a = {};
controlPoints.coords = getSphereCoords(-pi/12,0);
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(pi/3,pi/4);
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(pi/2,pi/2);
a{3} = controlPoints;

a = {};
controlPoints.coords = getSphereCoords(pi/2,pi/2);
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(pi/3+pi,pi/4);
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(pi/6+pi,pi/8);
a{3} = controlPoints;
controlPoints.coords = getSphereCoords(pi/12+pi,pi/12);
a{4} = controlPoints;
controlPoints.coords = getSphereCoords(-pi/12+pi,0);
a{5} = controlPoints;

a = {};
controlPoints.coords = getSphereCoords(pi/2,pi/2);
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(pi/3+pi,pi/4);
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(-pi/12+pi,0);
a{3} = controlPoints;

%% beispiel mit schnick und schnack für diplomarbeit

a = {};
controlPoints.coords = getSphereCoords(-pi/3,0);
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(-pi/3.5,-pi/4);
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(-pi/4,-pi/7);
a{3} = controlPoints;
controlPoints.coords = getSphereCoords(-pi/8,-pi/5);
a{4} = controlPoints;
controlPoints.coords = getSphereCoords(0,0);
a{5} = controlPoints;

a = {};
controlPoints.coords = getSphereCoords(-pi/3,0);
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(-pi/8,-pi/5);
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(0,0);
a{3} = controlPoints;

a = {};
controlPoints.coords = getSphereCoords(0,0);
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(pi/8,pi/5);
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(pi/6,pi/8);
a{3} = controlPoints;
controlPoints.coords = getSphereCoords(pi/4,pi/12);
a{4} = controlPoints;
controlPoints.coords = getSphereCoords(pi/3,0);
a{5} = controlPoints;

a = {};
controlPoints.coords = getSphereCoords(0,0);
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(pi/8,pi/5);
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(pi/3,0);
a{3} = controlPoints;

% die interpolierten punkte nochmal extra für aitken
a = {};
controlPoints.coords = getSphereCoords(-pi/3,0);
controlPoints.value = 0;
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(-pi/4,-pi/7);
controlPoints.value = 0.25;
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(0,0);
controlPoints.value = 0.5;
a{3} = controlPoints;
controlPoints.coords = getSphereCoords(pi/6,pi/8);
controlPoints.value = 0.75;
a{4} = controlPoints;
controlPoints.coords = getSphereCoords(pi/3,0);
controlPoints.value = 1;
a{5} = controlPoints;


%% test für gfrerrers method gc1 splines
a={};
controlPoints.coords = getSphereCoords(-pi/4,-pi/7);
a{1} = controlPoints;
controlPoints.coords = getSphereCoords(0,0);
a{2} = controlPoints;
controlPoints.coords = getSphereCoords(pi/6,pi/8);
a{3} = controlPoints;

point1 = [];
point2 = [];
for i = 0:0.001:1
%     point1 = [point1,aitken(a,i)];
    point2 = [point2,QBinterpolation(a,i)];
end

for i=1:size(point2,2)
%     point1(:,i)=1/point1(1,i).*point1(:,i);
    point2(:,i)=1/point2(1,i).*point2(:,i);
end

sphere;
axis equal;
hold on;
X=point1(2,:);
Y=point1(3,:);
Z=point1(4,:);
plot3(X,Y,Z);
X=point2(2,:);
Y=point2(3,:);
Z=point2(4,:);
plot3(X,Y,Z);